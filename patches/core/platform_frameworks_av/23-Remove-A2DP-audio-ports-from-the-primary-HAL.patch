From 42f723347273ddb314d0cacdc351023f6b993a96 Mon Sep 17 00:00:00 2001
From: ChonDoit <thphantomblog@gmail.com>
Date: Sun, 9 Oct 2022 20:49:43 +0000
Subject: [PATCH] APM: Remove A2DP audio ports from the primary HAL

These ports defined in the primary HAL are intended for A2DP offloading,
however they do not work in general on GSIs, and will interfere with
sysbta, the system-side generic bluetooth audio implementation.

Remove them as we parse the policy XML.

Co-authored-by: Pierre-Hugues Husson <phh@phh.me>
---
 .../managerdefinitions/src/Serializer.cpp     | 21 +++++++++++++++++++
 1 file changed, 21 insertions(+)

diff --git a/services/audiopolicy/common/managerdefinitions/src/Serializer.cpp b/services/audiopolicy/common/managerdefinitions/src/Serializer.cpp
index b474054cd3..0bc5e1475a 100644
--- a/services/audiopolicy/common/managerdefinitions/src/Serializer.cpp
+++ b/services/audiopolicy/common/managerdefinitions/src/Serializer.cpp
@@ -26,6 +26,7 @@
 #include <libxml/xinclude.h>
 #include <media/convert.h>
 #include <cutils/properties.h>
+#include <system/audio.h>
 #include <utils/Log.h>
 #include <utils/StrongPointer.h>
 #include <utils/Errors.h>
@@ -801,6 +802,7 @@ std::variant<status_t, ModuleTraits::Element> PolicySerializer::deserialize<Modu
         ALOGE("%s: No %s found", __func__, Attributes::name);
         return BAD_VALUE;
     }
+
     uint32_t versionMajor = 0, versionMinor = 0;
     std::string versionLiteral = getXmlAttribute(cur, Attributes::version);
     if (!versionLiteral.empty()) {
@@ -932,6 +934,25 @@ std::variant<status_t, ModuleTraits::Element> PolicySerializer::deserialize<Modu
             }
         }
     }
+    bool shouldEraseA2DP = name == "primary" && property_get_bool("persist.bluetooth.system_audio_hal.enabled", false);
+    if (shouldEraseA2DP) {
+        // Having A2DP ports in the primary audio HAL module will interfere with sysbta
+        // so remove them here. Note that we do not need to explicitly remove the
+        // corresponding routes below, because routes with invalid sinks will be ignored
+        auto iter = devicePorts.begin();
+        while (iter != devicePorts.end()) {
+            auto port = *iter;
+            auto type = port->type();
+            if (type == AUDIO_DEVICE_OUT_BLUETOOTH_A2DP
+                    || type == AUDIO_DEVICE_OUT_BLUETOOTH_A2DP_HEADPHONES
+                    || type == AUDIO_DEVICE_OUT_BLUETOOTH_A2DP_SPEAKER) {
+                ALOGE("Erasing A2DP device port %s", port->getTagName().c_str());
+                iter = devicePorts.erase(iter);
+            } else {
+                iter++;
+            }
+        }
+    }
     module->setDeclaredDevices(devicePorts);
 
     RouteTraits::Collection routes;
-- 
2.34.1

