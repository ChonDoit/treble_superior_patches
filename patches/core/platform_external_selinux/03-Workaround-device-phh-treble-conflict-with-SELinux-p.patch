From a9d259077acdc4a363fe037f755995d466763cc1 Mon Sep 17 00:00:00 2001
From: ChonDoit <thphantomblog@gmail.com>
Date: Thu, 29 Sep 2022 01:00:21 -0300
Subject: [PATCH] Workaround device/phh/treble conflict with SELinux policy

---
 libsepol/cil/src/cil_binary.c      |  7 +++++--
 libsepol/cil/src/cil_build_ast.c   | 15 ++++++++++++++-
 libsepol/cil/src/cil_resolve_ast.c | 15 +++++++++++++--
 3 files changed, 32 insertions(+), 5 deletions(-)

diff --git a/libsepol/cil/src/cil_binary.c b/libsepol/cil/src/cil_binary.c
index 53017e2d..a2cbad46 100644
--- a/libsepol/cil/src/cil_binary.c
+++ b/libsepol/cil/src/cil_binary.c
@@ -511,13 +511,16 @@ int cil_typealias_to_policydb(policydb_t *pdb, struct cil_alias *cil_alias)
 	type_datum_init(sepol_alias);
 
 	rc = __cil_get_sepol_type_datum(pdb, DATUM(cil_alias->actual), &sepol_type);
-	if (rc != SEPOL_OK) goto exit;
+	if (rc != SEPOL_OK) {
+        cil_log(CIL_ERR, "Failed at %s:%s:%d\n", __FILE__, __FUNCTION__, __LINE__);
+        goto exit;
 
 	sepol_alias->flavor = TYPE_TYPE;
 
 	key = cil_strdup(cil_alias->datum.fqn);
 	rc = symtab_insert(pdb, SYM_TYPES, key, sepol_alias, SCOPE_DECL, 0, NULL);
 	if (rc != SEPOL_OK) {
+		cil_log(CIL_ERR, "Failed at %s:%s:%d:%d\n", __FILE__, __FUNCTION__, __LINE__, rc);
 		goto exit;
 	}
 	sepol_alias->s.value = sepol_type->s.value;
@@ -3904,7 +3907,7 @@ int __cil_node_to_policydb(struct cil_tree_node *node, void *extra_args)
 
 exit:
 	if (rc != SEPOL_OK) {
-		cil_tree_log(node, CIL_ERR, "Binary policy creation failed");
+		cil_tree_log(node, CIL_ERR, "Binary policy creation failed, for pass = %d, flavor = %d", pass, node->flavor);
 	}
 	return rc;
 }
diff --git a/libsepol/cil/src/cil_build_ast.c b/libsepol/cil/src/cil_build_ast.c
index 5f9392d1..19ca62ee 100644
--- a/libsepol/cil/src/cil_build_ast.c
+++ b/libsepol/cil/src/cil_build_ast.c
@@ -119,6 +119,12 @@ int cil_add_decl_to_symtab(struct cil_db *db, symtab_t *symtab, hashtab_key_t ke
 		struct cil_symtab_datum *prev;
 		rc = cil_symtab_get_datum(symtab, key, &prev);
 		if (rc != SEPOL_OK) {
+			if(
+                        strcmp(key, "sysfs_usb_supply") == 0 ||
+                        strcmp(key, "hostapd") == 0 ||
+                        strcmp(key, "rpmb_device") == 0) {
+                    cil_log(CIL_ERR, "Ignoring...");
+                } else {
 			cil_log(CIL_ERR, "Re-declaration of %s %s, but previous declaration could not be found\n",cil_node_to_string(node), key);
 			return SEPOL_ERR;
 		}
@@ -144,6 +150,7 @@ int cil_gen_node(struct cil_db *db, struct cil_tree_node *ast_node, struct cil_s
 {
 	int rc = SEPOL_ERR;
 	symtab_t *symtab = NULL;
+	struct cil_symtab_datum *prev = NULL;
 
 	rc = cil_verify_name(db, (const char*)key, nflavor);
 	if (rc != SEPOL_OK) {
@@ -158,8 +165,14 @@ int cil_gen_node(struct cil_db *db, struct cil_tree_node *ast_node, struct cil_s
 	ast_node->data = datum;
 	ast_node->flavor = nflavor;
 
-	rc = cil_add_decl_to_symtab(db, symtab, key, datum, ast_node);
+	rc = cil_add_decl_to_symtab(db, symtab, key, datum, prev, ast_node);
 	if (rc != SEPOL_OK) {
+		if(
+                        strcmp(key, "sysfs_usb_supply") == 0 ||
+                        strcmp(key, "hostapd") == 0 ||
+                        strcmp(key, "rpmb_device") == 0) {
+                    cil_log(CIL_ERR, "Ignoring...");
+                } else {
 		goto exit;
 	}
 
diff --git a/libsepol/cil/src/cil_resolve_ast.c b/libsepol/cil/src/cil_resolve_ast.c
index b63c1359..45c5a320 100644
--- a/libsepol/cil/src/cil_resolve_ast.c
+++ b/libsepol/cil/src/cil_resolve_ast.c
@@ -517,7 +517,13 @@ int cil_resolve_aliasactual(struct cil_tree_node *current, void *extra_args, enu
 	}
 	if (FLAVOR(alias_datum) != alias_flavor) {
 		cil_log(CIL_ERR, "%s is not an alias\n",alias_datum->name);
-		rc = SEPOL_ERR;
+		if(
+                strcmp(alias_datum->name, "hostapd") == 0 ||
+                strcmp(alias_datum->name, "sysfs_usb_supply") == 0 ||
+                strcmp(alias_datum->name, "rpmb_device") == 0)
+            rc = 0;
+        else
+            rc = SEPOL_ERR;
 		goto exit;
 	}
 
@@ -535,7 +541,12 @@ int cil_resolve_aliasactual(struct cil_tree_node *current, void *extra_args, enu
 	alias = (struct cil_alias *)alias_datum;
 
 	if (alias->actual != NULL) {
-		cil_log(CIL_ERR, "%s %s cannot bind more than one value\n", cil_node_to_string(NODE(alias_datum)), alias_datum->name);
+		cil_log(CIL_ERR, "%s %s cannot bind more than one value\n", a1->datum.name, cil_node_to_string(NODE(alias_datum)), alias_datum->name);
+		if(
+                strcmp(a1->datum.name, "hostapd") == 0 ||
+                strcmp(a1->datum.name, "sysfs_usb_supply") == 0 ||
+                strcmp(a1->datum.name, "rpmb_device") == 0)
+            return SEPOL_OK;
 		rc = SEPOL_ERR;
 		goto exit;
 	}
-- 
2.37.3

