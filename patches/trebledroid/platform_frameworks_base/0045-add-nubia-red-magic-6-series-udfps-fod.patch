From 4c70bc31d36cd686e01c855e853eddf8213baa54 Mon Sep 17 00:00:00 2001
From: Huy Hoang <38396158+boydaihungst@users.noreply.github.com>
Date: Sat, 14 Oct 2023 12:44:36 +0700
Subject: [PATCH 45/47] add: nubia red magic 6 series udfps/fod

---
 packages/SystemUI/Android.bp                  |  3 +-
 .../systemui/biometrics/UdfpsController.java  | 59 +++++++++++++++++++
 .../android/systemui/biometrics/UdfpsView.kt  | 13 ++++
 3 files changed, 74 insertions(+), 1 deletion(-)

diff --git a/packages/SystemUI/Android.bp b/packages/SystemUI/Android.bp
index e9b15afd8ba3..0955ab2a006e 100644
--- a/packages/SystemUI/Android.bp
+++ b/packages/SystemUI/Android.bp
@@ -182,7 +182,8 @@ android_library {
         "vendor.lineage.powershare-V1.0-java",
         "vendor.goodix.hardware.biometrics.fingerprint-V2.1-java",
         "vendor.xiaomi.hw.touchfeature-V1.0-java",
-        "vendor.xiaomi.hardware.fingerprintextension-V1.0-java"
+        "vendor.xiaomi.hardware.fingerprintextension-V1.0-java",
+        "vendor.nubia.ifaa-V1.0-java",
     ],
     manifest: "AndroidManifest.xml",
 
diff --git a/packages/SystemUI/src/com/android/systemui/biometrics/UdfpsController.java b/packages/SystemUI/src/com/android/systemui/biometrics/UdfpsController.java
index 1d10888e764e..80b9d4cd2e49 100644
--- a/packages/SystemUI/src/com/android/systemui/biometrics/UdfpsController.java
+++ b/packages/SystemUI/src/com/android/systemui/biometrics/UdfpsController.java
@@ -47,6 +47,7 @@ import android.net.Uri;
 import android.os.Handler;
 import android.os.PowerManager;
 import android.os.Process;
+import android.os.SystemProperties;
 import android.os.Trace;
 import android.os.UserHandle;
 import android.os.VibrationAttributes;
@@ -110,9 +111,13 @@ import java.util.HashSet;
 import java.util.Optional;
 import java.util.Set;
 import java.util.concurrent.Executor;
+import java.io.File;
+import java.io.FileWriter;
+import java.io.IOException;
 
 import javax.inject.Inject;
 import javax.inject.Provider;
+import vendor.nubia.ifaa.V1_0.IIfaa;
 
 import kotlin.Unit;
 
@@ -245,6 +250,47 @@ public class UdfpsController implements DozeReceiver, Dumpable {
         }
     };
 
+    // Nubia 6 series fingerprint control command
+    // cmd = 13 -> finger down
+    // cmd = 14 -> after UI ready
+    // cmd = 15 -> finger up
+    public byte[] processCmd(int cmd, int param1, int param2, byte[] send_buf, int length) {
+        try {
+            if (cmd == 999) {
+                Log.d(TAG, "processCmd: 999");
+                return null;
+            }
+            ArrayList<Byte> sendList = new ArrayList<>();
+            if (send_buf != null) {
+                for (byte b : send_buf) {
+                    sendList.add(Byte.valueOf(b));
+                }
+            }
+            if (send_buf == null) {
+                Log.d(TAG, "FingerprintService send_buf = " + send_buf);
+            }
+            IIfaa iIfaaDaemon = IIfaa.getService();
+            if (iIfaaDaemon == null) {
+                Log.d(TAG, "processCmd: no iIfaaDaemon!");
+                return null;
+            }
+            ArrayList<Byte> resultList = iIfaaDaemon.processCmd(cmd, param1, param2, sendList, length);
+            int n = resultList.size();
+            Log.d(TAG, "FingerprintService result length n = " + n);
+            if (n == 0) {
+                return null;
+            }
+            byte[] result = new byte[n];
+            for (int i = 0; i < n; i++) {
+                result[i] = resultList.get(i).byteValue();
+            }
+            return result;
+        } catch (Exception e) {
+            e.printStackTrace();
+            return null;
+        }
+    };
+
     @Override
     public void dump(@NonNull PrintWriter pw, @NonNull String[] args) {
         pw.println("mSensorProps=(" + mSensorProps + ")");
@@ -1160,9 +1206,18 @@ public class UdfpsController implements DozeReceiver, Dumpable {
             });
         }
 
+	if(SystemProperties.get("ro.vendor.build.fingerprint").contains("nubia/NX669")) {
+          processCmd(13, 0, 0, new byte[0], 0);
+        }
+
         for (Callback cb : mCallbacks) {
             cb.onFingerDown();
         }
+
+	if(SystemProperties.get("ro.vendor.build.fingerprint").contains("nubia/NX669")) {
+          processCmd(14, 0, 0, new byte[0], 0);
+        }
+
         if (!mOnFingerDown && mUdfpsAnimation != null) {
             mUdfpsAnimation.show();
         }
@@ -1217,6 +1272,10 @@ public class UdfpsController implements DozeReceiver, Dumpable {
                     mFingerprintManager.onPointerUp(requestId, mSensorProps.sensorId);
                 }
             }
+
+	if(SystemProperties.get("ro.vendor.build.fingerprint").contains("nubia/NX669")) {
+	    processCmd(15, 0, 0, new byte[0], 0);
+        }
             for (Callback cb : mCallbacks) {
                 cb.onFingerUp();
             }
diff --git a/packages/SystemUI/src/com/android/systemui/biometrics/UdfpsView.kt b/packages/SystemUI/src/com/android/systemui/biometrics/UdfpsView.kt
index b7702d7a1996..6e11ded0bc13 100644
--- a/packages/SystemUI/src/com/android/systemui/biometrics/UdfpsView.kt
+++ b/packages/SystemUI/src/com/android/systemui/biometrics/UdfpsView.kt
@@ -37,6 +37,7 @@ import com.android.systemui.doze.DozeReceiver
 import java.io.File
 
 import vendor.goodix.hardware.biometrics.fingerprint.V2_1.IGoodixFingerprintDaemon
+import vendor.nubia.ifaa.V1_0.IIfaa
 import vendor.xiaomi.hw.touchfeature.V1_0.ITouchFeature
 import vendor.xiaomi.hardware.fingerprintextension.V1_0.IXiaomiFingerprint
 
@@ -238,6 +239,10 @@ Log.d("PHH", "Surface destroyed!")
     private val handlerThread = HandlerThread("UDFPS").also { it.start() }
     val myHandler = Handler(handlerThread.looper)
 
+    // This file contain current hbm value
+    val nubiaHbmState = "/sys/kernel/lcd_enhance/hbm_state"
+    var hasNubiaHbm = File(nubiaHbmState).exists()
+
     fun configureDisplay(onDisplayConfigured: Runnable) {
         isDisplayConfigured = true
         animationViewController?.onDisplayConfiguring()
@@ -308,6 +313,11 @@ Log.d("PHH", "Surface destroyed!")
                 }, 600)
             }, 200)
         }
+
+        if(hasNubiaHbm) {
+            Log.d("PHH-Enroll", "Nubia scenario in UdfpsView reached!")
+            File(nubiaHbmState).writeText("4095")
+          }
     }
 
     private fun doIlluminate(surface: Surface?, onDisplayConfigured: Runnable?) {
@@ -367,6 +377,9 @@ Log.d("PHH", "Surface destroyed!")
         } else if(hasXiaomiLhbm) {
             IXiaomiFingerprint.getService().extCmd(android.os.SystemProperties.getInt("persist.phh.xiaomi.fod.enrollment.id", 4), 0);
             ITouchFeature.getService().setTouchMode(0, 10, 0);
+        } else if(hasNubiaHbm) {
+            Log.d("PHH-Enroll", "Nubia Restore brightness")
+            File(nubiaHbmState).writeText(File("/sys/class/backlight/panel0-backlight/brightness").readText())
         } else {
             dimUpdate(0.0f)
         }
-- 
2.34.1

